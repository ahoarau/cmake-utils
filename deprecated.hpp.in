/// Copyright 2026 Inria. All rights reserved.
#pragma once

// Define a suffix which can be used to tag a type, a function or a a
// variable as deprecated (i.e. it will emit a warning when using it).
//
// Tagging a function as deprecated:
//  void foo () @LIBRARY_NAME_UPPERCASE@_DEPRECATED;
//
// Tagging a type as deprecated:
//  class Foo {};
//  typedef Foo Bar @LIBRARY_NAME_UPPERCASE@_DEPRECATED;
//
// Tagging a variable as deprecated:
//  int a @LIBRARY_NAME_UPPERCASE@_DEPRECATED = 0;
//
// The use of a macro is required as this is /not/ a standardized
// feature of C++ language or preprocessor, even if most of the
// compilers support it.
#if defined(__cplusplus) && (__cplusplus >= 201402L)
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED [[deprecated]]
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_MESSAGE(message) [[deprecated(#message)]]
#elif defined(__GNUC__) || defined(__clang__)
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED __attribute__ ((deprecated))
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_MESSAGE(message) __attribute__ (( deprecated(#message) ))
#else
# if defined(_MSC_VER) && !defined(__INTEL_COMPILER)
#  define @LIBRARY_NAME_UPPERCASE@_DEPRECATED __declspec (deprecated)
#  define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_MESSAGE(message) __declspec ( deprecated(#message) )
# else
/ If the compiler is not recognized, drop the feature.
#  define @LIBRARY_NAME_UPPERCASE@_DEPRECATED /* nothing */
#  define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_MESSAGE(message)
# endif // __MSVC__
#endif // __cplusplus

#if defined(__GNUC__) || defined(__clang__)
# ifndef @LIBRARY_NAME_UPPERCASE@_PRAGMA
#  define @LIBRARY_NAME_UPPERCASE@_PRAGMA(X) _Pragma(#X)
# endif
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_HEADER(MSG) @LIBRARY_NAME_UPPERCASE@_PRAGMA(GCC warning MSG)
#elif defined(_MSC_VER) && !defined(__INTEL_COMPILER)
# define @LIBRARY_NAME_UPPERCASE@_STRINGIZE_(MSG) #MSG
# define @LIBRARY_NAME_UPPERCASE@_STRINGIZE(MSG) @LIBRARY_NAME_UPPERCASE@_STRINGIZE_(MSG)
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_HEADER(MSG) \
  __pragma(message(__FILE__ "(" @LIBRARY_NAME_UPPERCASE@_STRINGIZE(__LINE__) ") : Warning: " MSG))
#else
# define @LIBRARY_NAME_UPPERCASE@_DEPRECATED_HEADER(MSG)
#endif
